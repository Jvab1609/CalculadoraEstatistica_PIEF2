package calc;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author jvalb
 */
public class Calculadora extends javax.swing.JFrame {

    /**
     * Creates new form Calculadora
     */
    public Calculadora() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    boolean tabelaFreq;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton6 = new javax.swing.JButton();
        jCheckBox3 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jCheckBox2 = new javax.swing.JCheckBox();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("Abrir novo arquivo");
        jMenuItem1.setToolTipText("");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        jMenuItem2.setText("Digitar dados");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem2);

        jMenuItem3.setText("Limpar dados");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        jMenuItem4.setText("Visualizar histórico");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItem4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora Estatística");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Agency FB", 1, 64)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CALCULADORA SHOW");

        jButton3.setText("Digitar dados manualmente");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Abrir arquivo");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Histórico");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(367, 367, 367)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(1110, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(302, 302, 302)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(629, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", jPanel2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTextField1.setEditable(false);

        jLabel1.setText("Arquivo aberto:");

        jLabel2.setText("Delimitador:");

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText(";");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton1.setText("Carregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setText("Selecionar outro");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Primeira linha do arquivo como nome das colunas");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton6.setText("Salvar no histórico");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Formato tabela de frequência");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                                        .addComponent(jCheckBox3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox1)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(963, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(402, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", jPanel1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel5.setText("Número de colunas:");

        jLabel6.setText("Número de linhas:");

        jSpinner2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner2StateChanged(evt);
            }
        });

        jCheckBox2.setText("Formato tabela de frequência");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jButton7.setText("Salvar no histórico");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton7)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6))
                            .addGap(42, 42, 42)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGap(632, 632, 632)
                            .addComponent(jCheckBox2)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(959, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jButton2)
                    .addComponent(jCheckBox2))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addContainerGap(407, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab2", jPanel3);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Tipo", "Operações", "Preview", "Data e horário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable3);

        jButton8.setText("Carregar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 921, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(835, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(451, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -40, 1920, 1100));

        jMenu1.setText("Dados");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Histórico");
        jMenu2.setToolTipText("");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        
     
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        jPopupMenu1.show(this,10,50);
    }//GEN-LAST:event_jMenu1MouseClicked
    
    
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    
    public void criarDigitar(int numLinha, int numCol) {
        if (jCheckBox2.isSelected() == true) {
            jSpinner1.setValue(2);
            jSpinner1.setEnabled(false);
            ((DefaultTableModel) jTable2.getModel()).setColumnCount(2);
            ((DefaultTableModel) jTable2.getModel()).setRowCount(numLinha);
            jTable2.getColumnModel().getColumn(0).setHeaderValue("Xi");
            jTable2.getColumnModel().getColumn(1).setHeaderValue("Fi");
            tabelaFreq = true;
        }
        else {
            jSpinner1.setEnabled(true);
            ((DefaultTableModel) jTable2.getModel()).setColumnCount(numCol);
            ((DefaultTableModel) jTable2.getModel()).setRowCount(numLinha);
            jTable2.getColumnModel().getColumn(0).setHeaderValue("A");
            jTable2.getColumnModel().getColumn(1).setHeaderValue("B");
            tabelaFreq = false;
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int numCol = (int) jSpinner1.getValue();
        int numLinha = (int) jSpinner2.getValue();
        criarDigitar(numLinha,numCol);
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    
    File arquivo = null;
    FileWriter writer = null;
    FileWriter writerShow = null;
    FileWriter writerHide = null;
    File historicoShow = new File("historicoCalculadoraSHOW.csv");
    File historicoHide = new File("historicoCalculadoraHIDE.csv");
   
    
    public void escolherArquivo() {
        try {
            JFileChooser chooser = new JFileChooser();
            if(chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                arquivo = chooser.getSelectedFile();
                jTextField1.setText(arquivo.getAbsolutePath());
                jButton1.setEnabled(true);
                jCheckBox1.setEnabled(true);
                jTextField2.setEnabled(true);
                ((DefaultTableModel) jTable1.getModel()).setColumnCount(0);
                ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
                jTabbedPane1.setSelectedIndex(1);
            } else {
                arquivo = null;
                jTextField1.setText("");
                jButton1.setEnabled(false);
                jCheckBox1.setEnabled(false);
                jTextField2.setEnabled(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(), 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE);
        }

    }
    
    
    public void lerArquivo() {
        try {
            ((DefaultTableModel) jTable1.getModel()).setColumnCount(0);
            ((DefaultTableModel) jTable1.getModel()).setRowCount(0);
            FileReader reader = new FileReader(arquivo);
            BufferedReader bf = new BufferedReader(reader);
            String linha = bf.readLine();
            StringTokenizer tk = new StringTokenizer(linha, jTextField2.getText());
            
            int numCol = (int) tk.countTokens();
            //System.out.println(numCol);
            if (jCheckBox3.isSelected() == true) {
                if (numCol == 2) {
                    tabelaFreq = true;
                }
                else {
                    tabelaFreq = false;
                    throw new Exception("O número de colunas do arquivo é diferente de 2. Impossível colocar no modelo tabela de frequência.");
                    
                }
            }
            else {
                tabelaFreq = false;
            }
            
            if (jCheckBox1.isSelected() == true) {
                String colunas[] = new String [numCol];
                for (int i = 0; i < colunas.length; i++) {
                    colunas[i] = tk.nextToken();
                    ((DefaultTableModel) jTable1.getModel()).addColumn(colunas[i]);
                }
                linha = bf.readLine();
            }
            else {
                
                ((DefaultTableModel) jTable1.getModel()).setColumnCount(tk.countTokens());
                if (tabelaFreq == true) {
                    //((DefaultTableModel) jTable3.getModel()).setColumnCount(2);
                    jTable1.getColumnModel().getColumn(0).setHeaderValue("Xi");
                    jTable1.getColumnModel().getColumn(1).setHeaderValue("Fi");
                }
            }
            
            String linhaRead[] = new String [numCol];
            while (linha != null) {
                tk = new StringTokenizer(linha, jTextField2.getText());
                for (int i = 0; i < linhaRead.length; i++) {
                    linhaRead[i] = tk.nextToken();
                }
                ((DefaultTableModel) jTable1.getModel()).addRow(linhaRead);
                
                linha = bf.readLine();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(), 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    public void escreverHistorico(String operacoes) {
        try {
            writerShow = new FileWriter(historicoShow,true);
            writerHide = new FileWriter(historicoHide,true);
            UIManager.put("OptionPane.cancelButtonText", "Cancelar");
            UIManager.put("OptionPane.okButtonText", "OK");
            String nomeSave = JOptionPane.showInputDialog(this, "Nome do salvamento: ", "Salvar no histórico", JOptionPane.QUESTION_MESSAGE, null, null, DISPOSE_ON_CLOSE).toString();
            String tipoShow = null;
            String tipoHide = null;
            String preview = null;
            int colunasArquivo = 0;
            int freq = 0;
            
            
            switch (jTabbedPane1.getSelectedIndex()) {
                case 1:
                    tipoShow = "Arquivo aberto";
                    tipoHide = "arqv";
                    File arquivoAberto = arquivo; 
                    preview = arquivoAberto.getAbsolutePath();
                    
                    if (jCheckBox1.isSelected() == true) {
                        colunasArquivo = 1;
                    }
                    else {
                        colunasArquivo = 0;
                    }
                    if (jCheckBox3.isSelected() == true) {
                        freq = 1;
                    }
                    else {
                        freq = 0;
                    }
                    
                    
                    
                    break;
                    
                case 2:
                    tipoShow = "Dados digitados";
                    tipoHide = "dados";
                    if (jCheckBox2.isSelected() == true) {
                        freq = 1;
                    }
                    else {
                        freq = 0;
                    }
                    preview = String.valueOf(((DefaultTableModel) jTable2.getModel()).getDataVector());
                    

                    
                    
                    
                    
                    
                    
                    break;     
            }
            
            
            
            
            String linha = "";
            String[] parametrosHide = {nomeSave, tipoHide, operacoes, String.valueOf(colunasArquivo), String.valueOf(freq)};
            //System.out.println(parametrosHide[1]);
            for (int i = 0; i < parametrosHide.length; i++) {
                
                linha += parametrosHide[i];
                
                if (i < parametrosHide.length-1) {
                    linha += "|";
                }
            }
            writerHide.write(linha+"\n");
            
            if (jTabbedPane1.getSelectedIndex() == 1) {
                writerHide.write(preview+"\n");
            }
            else {
                int n = ((DefaultTableModel) jTable2.getModel()).getRowCount();
                    int c = ((DefaultTableModel) jTable2.getModel()).getColumnCount();
                    for (int i = 0; i < n; i++) {
                        linha = "";
                        for (int j = 0; j < c; j++) {
                            linha += jTable2.getValueAt(i, j);
                            if(j < c-1) {
                                linha += ";";
                                // coloca o delimitador entre as strings, exceto para a última.
                            }
                            if (i == n-1 && j == c-1) {
                                linha += "&zz";
                            }
                               
                        }
                        
                        writerHide.write(linha+"\n");
                    }
            }
            
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");  
            LocalDateTime atual = LocalDateTime.now();  
            String data = dtf.format(atual);
            
            linha = "";
            String[] parametrosShow = {nomeSave, tipoShow, operacoes, preview, data};
            for (int i = 0; i < parametrosShow.length; i++) {
                linha += parametrosShow[i];
                if (i < parametrosShow.length-1) {
                    linha += "|";
                }
            }
            writerShow.write(linha+"\n");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(), 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                writerShow.close();
                writerHide.close();
            } catch (IOException ex) {
                
            }
        }
    }
    
    public void lerHistorico() {
        try {
            // ((DefaultTableModel) jTable3.getModel()).setRowCount(0);
            // System.out.println(historico.getAbsolutePath());
            FileReader reader = new FileReader(historicoShow);
            BufferedReader bf = new BufferedReader(reader);
            String linha = bf.readLine();
            ((DefaultTableModel) jTable3.getModel()).setRowCount(0);
            ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
            //System.out.println(linha);
            while(linha != null) {
                StringTokenizer tokens = new StringTokenizer(linha, "|");
                String row[] = new String[5];
                for (int i = 0; i < row.length; i++) {
                    row[i] = tokens.nextToken();
                }
                ((DefaultTableModel) jTable3.getModel()).insertRow(0,row);
                
                linha = bf.readLine();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(), 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void carregarHistorico() {
        try {
            FileReader reader = new FileReader(historicoHide);
            BufferedReader bf = new BufferedReader(reader);
            String linha = bf.readLine();
            //System.out.println(linha);
            int row = jTable3.getSelectedRow();
            String nome = (String)jTable3.getValueAt(row, 0);
            //System.out.println("nome " + nome);
            StringTokenizer tk = new StringTokenizer(linha, "|");
            String parametros[] = new String [tk.countTokens()];
            //System.out.println(tk.countTokens());
            //System.out.println("aqui1");
            System.out.println(nome);
            while (linha != null) {
                if (linha.startsWith(nome)) {
                    tk = new StringTokenizer(linha, "|");
                    for (int i = 0; i < 5; i++) {
                        parametros[i] = tk.nextToken();
                        //System.out.println(parametros[i]);
                    }
                    System.out.println(linha);
                    break;
                }
                else {
                    linha = bf.readLine();
                }
                //System.out.println("LINHA "+linha);
                
            }
            //System.out.println("aqui2");
            // parametrosHide = {nomeSave, tipoHide, operacoes, String.valueOf(colunasArquivo), String.valueOf(freq)};
            //System.out.println(parametros[3]);
            System.out.println("1");
            
            if (parametros[1].equals("arqv")) {
                linha = bf.readLine();
                jTabbedPane1.setSelectedIndex(1);
                System.out.println(linha);
                arquivo = new File(linha);
                
                if (parametros[3].equals("1")) {
                    if(jCheckBox1.isSelected() == false) {
                        jCheckBox1.doClick();
                        tabelaFreq = true;
                    }
                }
                else {
                    if(jCheckBox1.isSelected() == true) {
                        jCheckBox1.doClick();
                        
                    }
                }
                
                if (parametros[4].equals("1")) {
                    if(jCheckBox3.isSelected() == false) {
                        jCheckBox3.doClick();
                    }
                }
                else {
                    if(jCheckBox3.isSelected() == true) {
                        jCheckBox3.doClick();
                    }
                }
                jTextField1.setText(arquivo.getAbsolutePath());
                //System.out.println(arquivo.getAbsolutePath());
                lerArquivo();
            }
            else {
                jTabbedPane1.setSelectedIndex(2);
                
                if (parametros[4].equals("1")) {
                    if(jCheckBox2.isSelected() == false) {
                        jCheckBox2.doClick();
                        ((DefaultTableModel) jTable2.getModel()).setColumnCount(2);
       
                        jTable2.getColumnModel().getColumn(0).setHeaderValue("Xi");
                        jTable2.getColumnModel().getColumn(1).setHeaderValue("Fi");
                        tabelaFreq = true;
                    }
                }
                else {
                    if(jCheckBox2.isSelected() == true) {
                        jCheckBox2.doClick();
                    }
                }
                linha = bf.readLine();
                tk = new StringTokenizer(linha, ";");
                String[] linhaRead = new String[tk.countTokens()];
                ((DefaultTableModel) jTable2.getModel()).setColumnCount(linhaRead.length);
                int numLinhas = 0;
                while (linha != null) {
                    tk = new StringTokenizer(linha, ";");
                    for (int i = 0; i < linhaRead.length; i++) {
                        linhaRead[i] = tk.nextToken();
                        numLinhas += 1;
                        if (linhaRead[i].endsWith("&zz")) {
                            System.out.println("AAAAAAAAAAAAAAAAAAAAAA");
                            linhaRead[i] = linhaRead[i].substring(0, linhaRead[i].length() - 3);
                            System.out.println(linhaRead[i]);
                            
                            break;
                        }
                        
                    }
                    linha = bf.readLine();
                    ((DefaultTableModel) jTable2.getModel()).addRow(linhaRead);
                    
                }
                jSpinner1.setValue(((DefaultTableModel) jTable2.getModel()).getColumnCount());
                jSpinner2.setValue(((DefaultTableModel) jTable2.getModel()).getRowCount());
                
                
                
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(), 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        escolherArquivo();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jSpinner1.setValue(0);
        jSpinner2.setValue(0);
        ((DefaultTableModel) jTable2.getModel()).setColumnCount(0);
        ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
        jTabbedPane1.setSelectedIndex(2);
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        jTabbedPane1.setSelectedIndex(3);
        lerHistorico();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        escolherArquivo();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            lerArquivo();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    e.getMessage(), 
                    "ERRO", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        escolherArquivo();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // JOptionPane.showInputDialog(this, "Nome do salvamento: ", DISPOSE_ON_CLOSE);
        escreverHistorico("********");
        //lerHistorico();
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        jPopupMenu2.show(this,10,50);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        jTabbedPane1.setSelectedIndex(3);
        lerHistorico();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

 
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected() == true) {
            jSpinner1.setValue(2);
            jSpinner1.setEnabled(false);
        }
        else {
            jSpinner1.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        escreverHistorico("********");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        carregarHistorico();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jSpinner2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner2StateChanged
        int s1 = (int) jSpinner2.getValue();
        if (s1 < 0) {
            jSpinner2.setValue(0);
        }
    }//GEN-LAST:event_jSpinner2StateChanged

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        int s2 = (int) jSpinner1.getValue();
        if (s2 < 0) {
            jSpinner1.setValue(0);
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
